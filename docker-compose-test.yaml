services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -p ${DB_PORT}"]
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      dockerfile: docker/main.Dockerfile
    environment:
      ENVIRONMENT: production
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_SSL: False
      JWT_SECRET: ${JWT_SECRET}
      SERVICE_PORT: ${SERVICE_PORT}
    ports:
      - ${SERVICE_PORT}:${SERVICE_PORT}
    depends_on:
      db:
        condition: service_healthy
    command: ["./app"]
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:${SERVICE_PORT}/health > /dev/null"]
      interval: 5s
      timeout: 5s
      retries: 5

  test:
    build:
      context: .
      dockerfile: docker/test.Dockerfile
    environment:
      ENVIRONMENT: test
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_SSL: False
      JWT_SECRET: ${JWT_SECRET}
      SERVICE_HOST: app
      SERVICE_PORT: ${SERVICE_PORT}
    depends_on:
      app:
        condition: service_healthy
    command: ["ginkgo", "run", "-p", "./tests/integration"]
