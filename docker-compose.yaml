services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -p ${DB_PORT}"]
      interval: 5s
      timeout: 5s
      retries: 10

  app:
    build:
      context: .
      dockerfile: docker/main.Dockerfile
    environment:
      ENVIRONMENT: production
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_SSL: False
      JWT_SECRET: ${JWT_SECRET}
      SERVICE_PORT: ${SERVICE_PORT}
    ports:
      - ${SERVICE_PORT}:${SERVICE_PORT}
      - "9091:9091"
    depends_on:
      db:
        condition: service_healthy
    command: ["./app"]
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:${SERVICE_PORT}/health > /dev/null"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "8081:8081"
    environment:
      SERVICE_PORT: ${SERVICE_PORT}
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/nginx.conf.template:ro
    entrypoint:
      - /bin/sh
      - -c
      - |
        envsubst '$${SERVICE_PORT}' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && \
        nginx -g 'daemon off;'
    depends_on:
      app:
        condition: service_healthy

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9113:9113"
    command:
      - "--nginx.scrape-uri=http://nginx:8081/stub_status"
    depends_on:
      nginx:
        condition: service_started

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./metrics:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./metrics/provisioning:/etc/grafana/provisioning
      - ./metrics/dashboards:/var/lib/grafana/dashboards

volumes:
  grafana-data: